name: Update Issues Report

on:
  schedule:
    - cron: '0 * * * *' # 每小时运行一次
  workflow_dispatch: # 手动触发
  issues:
    types: [opened, edited, closed]

permissions:
  contents: write
  issues: read  # 确保有权限读取 issues

jobs:
  update-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch all open issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Actions 自动生成的 token
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/issues?state=open \
               > issues.json
               
      - name: Print issues.json
        run: |
          cat issues.json
          
      - name: Generate markdown file
        run: |
          echo "# Comment" > README.md
          echo "" >> README.md
          jq -r '
            .[] |
            "* [Comment-\(.number)](\(.html_url)): **\(.user.login)** - **\(.title)**"   # 生成 Markdown 链接，显示 issue 编号和链接
            + "\n\n"                                                                # 添加换行符
            + "```markdown\n"                                                       # 开始 Markdown 代码块
            + (.body // "No description provided")                                  # 显示 issue 描述或默认文本
            + "\n```"                                                               # 结束 Markdown 代码块
          ' issues.json >> README.md


      - name: Check if markdown file has changed and commit if needed
        run: |
          if git diff --exit-code README.md; then
            echo "No changes detected, skipping commit."
          else
            echo "Changes detected, committing."
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "Updated Comment"
            git push
          fi
